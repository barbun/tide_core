<?php

/**
 * @file
 * Tide Media module functionality.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_pre_view().
 */
function tide_media_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  if ($view->id() == 'media') {
    // Add License field as a filter to the view.
    $expose_array = [
      'exposed' => TRUE,
      'expose' => [
        'operator_id' => 'field_media_license_value_op',
        'label' => 'License',
        'use_operator' => FALSE,
        'operator' => 'field_media_license_value_op',
        'identifier' => 'field_media_license_value',
        'required' => FALSE,
        'remember' => FALSE,
        'multiple' => FALSE,
      ],
      'group_type' => 'group',
      'operator' => 'or',
      'group' => 1,
      'type' => 'select',
    ];
    $view->addHandler('media_page_list', 'filter', 'media__field_media_license', 'field_media_license_value', $expose_array);
  }
}

/**
 * Implements hook_form_alter().
 */
function tide_media_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Hide the "Embedded with Transcript" view mode from non-audio embed.
  if ($form_id == 'entity_embed_dialog') {
    $entity_browser = $form_state->getValue('entity_browser');
    if (!empty($entity_browser['entities'])) {
      /** @var \Drupal\media\Entity\Media $entity */
      $entity = reset($entity_browser['entities']);
      if ($entity && $entity->bundle() != 'audio') {
        unset($form['attributes']['data-entity-embed-display']['#options']['view_mode:media.embedded_with_transcript']);
      }
    }
  }
}

/**
 * Implements template_preprocess_field().
 */
function tide_media_preprocess_field(&$variables) {
  if ($variables['field_name'] == 'field_media_file') {
    $element = $variables['element'];
    if ($element['#entity_type'] == 'media' && $element['#bundle'] == 'document' && $element['#view_mode'] == 'embedded') {
      foreach ($variables['items'] as $delta => &$item) {
        /** @var \Drupal\media\Entity\Media $media */
        $media = $element['#object'];
        $document_name = $media->get('name')->getString();
        if ($document_name) {
          $item['content']['#description'] = $document_name;
          $element[$delta] = $item;
        }
      }
    }
  }
}

/**
 * Implements template_preprocess_file_link().
 */
function tide_media_preprocess_file_link(&$variables) {
  /** @var \Drupal\file\Entity\File $file */
  $file = $variables['file'];
  /** @var \Drupal\Core\GeneratedLink $link */
  $link = $variables['link'];
  $link_html = $link->getGeneratedLink();
  $file_size = format_size($file->getSize());

  $mime_type = $file->getMimeType();
  $mime_category = file_icon_class($mime_type);
  switch ($mime_category) {
    case 'application-pdf':
      $file_type = 'PDF';
      break;

    case 'x-office-document':
      $file_type = 'Word';
      break;

    case 'x-office-spreadsheet':
      $file_type = 'Excel';
      break;

    case 'x-office-presentation':
      $file_type = 'PPT';
      break;

    case 'text':
      $file_type = 'Text';
      break;

    default:
      $file_type = 'Other';
  }

  $link_html .= ' <span class="file--info">(<span class="file--info--type">' . $file_type . '</span> <span class="file--info-size">' . $file_size . '</span>)</span>';
  $link->setGeneratedLink($link_html);
}
