version: 2
aliases:
  # Fingerprint of the SSH key for the Deployer user. The value is found in
  # CircleCI UI -> SSH Permissions.
  - &deploy_ssh_fingerprint "36:03:e3:ca:b3:0b:82:18:e2:e9:ae:5d:81:17:86:b1"
  - &step_configure_git
    run:
      name: Configure git
      command: |
        git config --global user.email "$DEPLOY_USER_EMAIL" && git config --global user.name "$DEPLOY_USER_NAME"
        mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
        DEPLOY_SSH_FILE="${DEPLOY_SSH_FINGERPRINT//:}" && DEPLOY_SSH_FILE="id_rsa_${DEPLOY_SSH_FILE//\"}" && ssh-add -D && ssh-add ~/.ssh/$DEPLOY_SSH_FILE

jobs:
  build:
    docker:
      - image: singledigital/bay-circle:latest
        environment:
          COMPOSER_ALLOW_SUPERUSER: 1
          COMPOSE_PATH_SEPARATOR: ":"
          COMPOSE_FILE: docker-compose.yml:docker-compose.ci.yml
    working_directory: /app
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Validate composer config.
          command: composer validate --ansi --with-dependencies --strict
      - run:
          name: Pull newest Bay images.
          command: composer bay:pull
      - run:
          name: Start Bay stack.
          command: |
            composer bay:start -- --build
            sleep 10 # wait for mariadb to startup
            docker ps -a
      - run:
          name: Setup app.
          command: |
            docker-compose exec cli bash -c "mkdir -p /home/.ssh && echo -e \"$BAY_KEY\" > /home/.ssh/key && chmod 600 /home/.ssh/key"
            composer app:db-import
            composer app:search-index
            composer bay:cli -- mkdir -p /app/screenshots
      - run:
          name: Install dev dependencies.
          command: composer bay:cli -- composer install --ansi
      - run:
          name: Lint code.
          command: composer bay:cli -- composer app:cs
      - run:
          name: Run unit tests.
          command: composer bay:cli -- vendor/bin/phpunit
      - run:
          name: Run behat tests.
          command: composer bay:cli -- vendor/bin/behat --format=progress_fail --colors || composer bay:cli -- vendor/bin/behat --format=progress_fail --colors --rerun
      - run:
          name: Copy artifacts.
          command: |
            mkdir -p /tmp/artifacts/behat
            docker cp $(docker-compose ps -q cli):/app/screenshots /tmp/artifacts/behat
          when: always
      - store_artifacts:
          path: /tmp/artifacts

  build-install:
    docker:
      - image: singledigital/bay-circle:latest
        environment:
          COMPOSER_ALLOW_SUPERUSER: 1
          COMPOSE_PATH_SEPARATOR: ":"
          COMPOSE_FILE: docker-compose.yml:docker-compose.ci.yml
    working_directory: /app
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Validate composer config.
          command: composer validate --ansi --with-dependencies --strict
      - run:
          name: Pull newest Bay images.
          command: composer bay:pull
      - run:
          name: Start Bay stack.
          command: |
            composer bay:start -- --build
            sleep 10 # wait for mariadb to startup
            docker ps -a
      - run:
          name: Setup app.
          command: |
            docker-compose exec cli bash -c "mkdir -p /home/.ssh && echo -e \"$BAY_KEY\" > /home/.ssh/key && chmod 600 /home/.ssh/key"
            composer app:site-install
            composer bay:cli -- mkdir -p /app/screenshots
      - run:
          name: Install dev dependencies.
          command: composer bay:cli -- composer install --ansi
      - run:
          name: Lint code.
          command: composer bay:cli -- composer app:cs
      - run:
          name: Run unit tests.
          command: composer bay:cli -- vendor/bin/phpunit
      - run:
          name: Run behat tests.
          command: composer bay:cli -- vendor/bin/behat --format=progress_fail --colors --profile=tide || composer bay:cli -- vendor/bin/behat --format=progress_fail --colors --profile=tide --rerun
      - run:
          name: Copy artifacts.
          command: |
            mkdir -p /tmp/artifacts/behat
            docker cp $(docker-compose ps -q cli):/app/screenshots /tmp/artifacts/behat
          when: always
      - store_artifacts:
          path: /tmp/artifacts

  push-api:
    docker:
      - image: singledigital/bay-circle:latest
    working_directory: /app
    environment:
      DEPLOY_SSH_FINGERPRINT: *deploy_ssh_fingerprint
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - *deploy_ssh_fingerprint
      - *step_configure_git
      - run:
          name: Push to remote
          command: |
            git checkout -b api
            git push origin api --force

  push-api-edge:
    docker:
      - image: singledigital/bay-circle:latest
    working_directory: /app
    environment:
      DEPLOY_SSH_FINGERPRINT: *deploy_ssh_fingerprint
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - *deploy_ssh_fingerprint
      - *step_configure_git
      - run:
          name: Push to remote
          command: |
            git checkout -b api-edge
            git push origin api-edge --force

workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            branches:
              ignore: /api|api\-edge/

      - build-install
      - push-api:
          requires:
            - build-install
          filters:
            branches:
              only: master
      - push-api-edge:
          requires:
            - build-install
          filters:
            branches:
              only: /develop|ci/
